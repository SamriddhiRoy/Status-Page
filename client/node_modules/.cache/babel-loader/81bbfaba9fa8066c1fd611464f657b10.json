{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samri\\\\creator\\\\creator\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport UptimeGraph from '../components/UptimeGraph';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColor = {\n  operational: \"green\",\n  degraded: \"orange\",\n  down: \"red\",\n  // Assuming 'down' is the status for major outage\n  \"partial outage\": \"orange\",\n  // Added for clarity\n  \"major outage\": \"red\" // Added for clarity\n};\n\nconst Dashboard = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8001/services/').then(res => setServices(res.data)).catch(error => console.error(\"Error fetching services:\", error)); // Added error handling\n  }, []);\n\n  // Remove the prepareUptimeData function as it's no longer needed for Doughnut chart\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6 bg-gray-50 min-h-screen font-inter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-extrabold mb-8 text-center text-gray-800\",\n      children: \"System Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), services.length > 0 ? /*#__PURE__*/_jsxDEV(UptimeGraph, {\n      serviceData: services\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-8 text-center text-gray-500 py-10\",\n      children: \"No service data available. Please add services in Service Management.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold mb-6 text-gray-700 border-b pb-4\",\n      children: \"Services Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), services.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-500 py-8 text-lg\",\n      children: \"No services configured yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4 bg-white p-6 rounded-lg shadow-md\",\n      children: [\" \", services.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center justify-between border-b last:border-b-0 pb-3 pt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: service.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `px-3 py-1 rounded-full text-sm font-semibold capitalize\n                ${service.status === 'Operational' ? 'bg-green-100 text-green-800' : ''}\n                ${service.status === 'Degraded' || service.status === 'Partial Outage' ? 'bg-orange-100 text-orange-800' : ''}\n                ${service.status === 'Major Outage' ? 'bg-red-100 text-red-800' : ''}\n              `,\n          children: service.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, service.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');\n        body { font-family: 'Inter', sans-serif; }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6zIv7VYIWrxuvR7GDZce08FfVgw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","UptimeGraph","axios","statusColor","operational","degraded","down","Dashboard","services","setServices","get","then","res","data","catch","error","console","length","map","service","name","status","id"],"sources":["C:/Users/Samri/creator/creator/client/src/pages/Dashboard.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport UptimeGraph from '../components/UptimeGraph';\r\nimport axios from 'axios';\r\n\r\nconst statusColor = {\r\n  operational: \"green\",\r\n  degraded: \"orange\",\r\n  down: \"red\", // Assuming 'down' is the status for major outage\r\n  \"partial outage\": \"orange\", // Added for clarity\r\n  \"major outage\": \"red\" // Added for clarity\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [services, setServices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8001/services/')\r\n      .then((res) => setServices(res.data))\r\n      .catch(error => console.error(\"Error fetching services:\", error)); // Added error handling\r\n  }, []);\r\n\r\n  // Remove the prepareUptimeData function as it's no longer needed for Doughnut chart\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 bg-gray-50 min-h-screen font-inter\">\r\n      <h1 className=\"text-4xl font-extrabold mb-8 text-center text-gray-800\">System Dashboard</h1>\r\n      \r\n      {/* Pass the raw services array directly to UptimeGraph */}\r\n      {services.length > 0 ? (\r\n        <UptimeGraph serviceData={services} />\r\n      ) : (\r\n        <div className=\"bg-white p-6 rounded-lg shadow-md mb-8 text-center text-gray-500 py-10\">\r\n          No service data available. Please add services in Service Management.\r\n        </div>\r\n      )}\r\n      \r\n      <h2 className=\"text-3xl font-semibold mb-6 text-gray-700 border-b pb-4\">Services Overview</h2>\r\n      {services.length === 0 ? (\r\n        <p className=\"text-center text-gray-500 py-8 text-lg\">No services configured yet.</p>\r\n      ) : (\r\n        <ul className=\"space-y-4 bg-white p-6 rounded-lg shadow-md\"> {/* Added styling to the list */}\r\n          {services.map((service) => (\r\n            <li key={service.id} className=\"flex items-center justify-between border-b last:border-b-0 pb-3 pt-1\">\r\n              <span className=\"text-lg font-medium text-gray-900\">{service.name}</span>\r\n              <span className={`px-3 py-1 rounded-full text-sm font-semibold capitalize\r\n                ${service.status === 'Operational' ? 'bg-green-100 text-green-800' : ''}\r\n                ${service.status === 'Degraded' || service.status === 'Partial Outage' ? 'bg-orange-100 text-orange-800' : ''}\r\n                ${service.status === 'Major Outage' ? 'bg-red-100 text-red-800' : ''}\r\n              `}>\r\n                {service.status}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <style>{`\r\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');\r\n        body { font-family: 'Inter', sans-serif; }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,WAAW,GAAG;EAClBC,WAAW,EAAE,OAAO;EACpBC,QAAQ,EAAE,QAAQ;EAClBC,IAAI,EAAE,KAAK;EAAE;EACb,gBAAgB,EAAE,QAAQ;EAAE;EAC5B,cAAc,EAAE,KAAK,CAAC;AACxB,CAAC;;AAED,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACQ,GAAG,CAAC,iCAAiC,CAAC,CACzCC,IAAI,CAAEC,GAAG,IAAKH,WAAW,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC,CACpCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACE;IAAK,SAAS,EAAC,0DAA0D;IAAA,wBACvE;MAAI,SAAS,EAAC,wDAAwD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EAG3FP,QAAQ,CAACS,MAAM,GAAG,CAAC,gBAClB,QAAC,WAAW;MAAC,WAAW,EAAET;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEtC;MAAK,SAAS,EAAC,wEAAwE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGxF,eAED;MAAI,SAAS,EAAC,yDAAyD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,EAC7FA,QAAQ,CAACS,MAAM,KAAK,CAAC,gBACpB;MAAG,SAAS,EAAC,wCAAwC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC,gBAErF;MAAI,SAAS,EAAC,6CAA6C;MAAA,gBACxDT,QAAQ,CAACU,GAAG,CAAEC,OAAO,iBACpB;QAAqB,SAAS,EAAC,sEAAsE;QAAA,wBACnG;UAAM,SAAS,EAAC,mCAAmC;UAAA,UAAEA,OAAO,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ,eACzE;UAAM,SAAS,EAAG;AAChC,kBAAkBD,OAAO,CAACE,MAAM,KAAK,aAAa,GAAG,6BAA6B,GAAG,EAAG;AACxF,kBAAkBF,OAAO,CAACE,MAAM,KAAK,UAAU,IAAIF,OAAO,CAACE,MAAM,KAAK,gBAAgB,GAAG,+BAA+B,GAAG,EAAG;AAC9H,kBAAkBF,OAAO,CAACE,MAAM,KAAK,cAAc,GAAG,yBAAyB,GAAG,EAAG;AACrF,eAAgB;UAAA,UACCF,OAAO,CAACE;QAAM;UAAA;UAAA;UAAA;QAAA,QACV;MAAA,GARAF,OAAO,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAUpB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEL,eACD;MAAA,UAAS;AACf;AACA;AACA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;AAAC,GAjDIf,SAAS;AAAA,KAATA,SAAS;AAmDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}