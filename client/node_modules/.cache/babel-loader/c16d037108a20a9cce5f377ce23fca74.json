{"ast":null,"code":"// routes/user.js\nconst express = require('express');\nconst router = express.Router();\nconst auth = require('../middleware/auth');\nconst User = require('../models/User');\nconst bcrypt = require('bcryptjs');\nrouter.put('/update', auth, async (req, res) => {\n  try {\n    const {\n      name,\n      email,\n      password\n    } = req.body;\n    const userId = req.user.id;\n    const updates = {};\n    if (name) updates.name = name;\n    if (email) updates.email = email;\n    if (password) {\n      const salt = await bcrypt.genSalt(10);\n      updates.password = await bcrypt.hash(password, salt);\n    }\n    const updatedUser = await User.findByIdAndUpdate(userId, {\n      $set: updates\n    }, {\n      new: true,\n      runValidators: true\n    }).select('-password');\n    if (!updatedUser) {\n      return res.status(404).json({\n        message: 'User not found'\n      });\n    }\n    res.json({\n      message: 'Profile updated successfully',\n      user: updatedUser\n    });\n  } catch (error) {\n    console.error('Error updating profile:', error);\n    res.status(500).json({\n      message: 'Error updating profile',\n      error: error.message\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","auth","User","bcrypt","put","req","res","name","email","password","body","userId","user","id","updates","salt","genSalt","hash","updatedUser","findByIdAndUpdate","$set","new","runValidators","select","status","json","message","error","console","module","exports"],"sources":["C:/Users/Samri/creator/creator/client/src/pages/Profile.js"],"sourcesContent":["// routes/user.js\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst auth = require('../middleware/auth');\r\nconst User = require('../models/User');\r\nconst bcrypt = require('bcryptjs');\r\n\r\nrouter.put('/update', auth, async (req, res) => {\r\n  try {\r\n    const { name, email, password } = req.body;\r\n    const userId = req.user.id;\r\n\r\n    const updates = {};\r\n    if (name) updates.name = name;\r\n    if (email) updates.email = email;\r\n    if (password) {\r\n      const salt = await bcrypt.genSalt(10);\r\n      updates.password = await bcrypt.hash(password, salt);\r\n    }\r\n\r\n    const updatedUser = await User.findByIdAndUpdate(\r\n      userId,\r\n      { $set: updates },\r\n      { new: true, runValidators: true }\r\n    ).select('-password');\r\n\r\n    if (!updatedUser) {\r\n      return res.status(404).json({ message: 'User not found' });\r\n    }\r\n\r\n    res.json({ \r\n      message: 'Profile updated successfully',\r\n      user: updatedUser\r\n    });\r\n  } catch (error) {\r\n    console.error('Error updating profile:', error);\r\n    res.status(500).json({ \r\n      message: 'Error updating profile',\r\n      error: error.message \r\n    });\r\n  }\r\n});\r\n\r\nmodule.exports = router;"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,EAAE;AAC/B,MAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAC1C,MAAMI,IAAI,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAMK,MAAM,GAAGL,OAAO,CAAC,UAAU,CAAC;AAElCC,MAAM,CAACK,GAAG,CAAC,SAAS,EAAEH,IAAI,EAAE,OAAOI,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACF,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGJ,GAAG,CAACK,IAAI;IAC1C,MAAMC,MAAM,GAAGN,GAAG,CAACO,IAAI,CAACC,EAAE;IAE1B,MAAMC,OAAO,GAAG,CAAC,CAAC;IAClB,IAAIP,IAAI,EAAEO,OAAO,CAACP,IAAI,GAAGA,IAAI;IAC7B,IAAIC,KAAK,EAAEM,OAAO,CAACN,KAAK,GAAGA,KAAK;IAChC,IAAIC,QAAQ,EAAE;MACZ,MAAMM,IAAI,GAAG,MAAMZ,MAAM,CAACa,OAAO,CAAC,EAAE,CAAC;MACrCF,OAAO,CAACL,QAAQ,GAAG,MAAMN,MAAM,CAACc,IAAI,CAACR,QAAQ,EAAEM,IAAI,CAAC;IACtD;IAEA,MAAMG,WAAW,GAAG,MAAMhB,IAAI,CAACiB,iBAAiB,CAC9CR,MAAM,EACN;MAAES,IAAI,EAAEN;IAAQ,CAAC,EACjB;MAAEO,GAAG,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAK,CAAC,CACnC,CAACC,MAAM,CAAC,WAAW,CAAC;IAErB,IAAI,CAACL,WAAW,EAAE;MAChB,OAAOZ,GAAG,CAACkB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAiB,CAAC,CAAC;IAC5D;IAEApB,GAAG,CAACmB,IAAI,CAAC;MACPC,OAAO,EAAE,8BAA8B;MACvCd,IAAI,EAAEM;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/CrB,GAAG,CAACkB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,wBAAwB;MACjCC,KAAK,EAAEA,KAAK,CAACD;IACf,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFG,MAAM,CAACC,OAAO,GAAG/B,MAAM"},"metadata":{},"sourceType":"module"}