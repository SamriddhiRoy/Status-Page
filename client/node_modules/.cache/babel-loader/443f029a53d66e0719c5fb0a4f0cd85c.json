{"ast":null,"code":"import _objectSpread from \"C:/Users/Samri/creator/creator/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Samri/creator/creator/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\n/**\n * @license lucide-react v0.511.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\nvar createLucideIcon = function createLucideIcon(iconName, iconNode) {\n  var Component = forwardRef(function (_ref, ref) {\n    var className = _ref.className,\n      props = _objectWithoutProperties(_ref, _excluded);\n    return createElement(Icon, _objectSpread({\n      ref: ref,\n      iconNode: iconNode,\n      className: mergeClasses(\"lucide-\".concat(toKebabCase(toPascalCase(iconName))), \"lucide-\".concat(iconName), className)\n    }, props));\n  });\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\nexport { createLucideIcon as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAWM,uBAAmB,SAAnBA,iBAAoBC,UAAkBC,QAAuB;EACjE,IAAMC,SAAY,cAAuC,gBAA0BC;IAAA,IAAvBC,SAAW,QAAXA,SAAW;MAAGC;IAAA,OACxEC,cAAcC,IAAM;MAClBJ;MACAF;MACAG,SAAW,gCACCI,YAAYC,YAAa,SAAQ,CAAC,CAAC,oBACnCT,QAAQ,GAClBI;IACF,GACGC,OACJ;EAAA,EACH;EAEUH,wBAAcO,aAAaT,QAAQ;EAEtC;AACT","names":["createLucideIcon","iconName","iconNode","Component","ref","className","props","createElement","Icon","toKebabCase","toPascalCase"],"sources":["C:\\Users\\Samri\\creator\\creator\\client\\node_modules\\lucide-react\\src\\createLucideIcon.ts"],"sourcesContent":["import { createElement, forwardRef } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from '@lucide/shared';\nimport { IconNode, LucideProps } from './types';\nimport Icon from './Icon';\n\n/**\n * Create a Lucide icon component\n * @param {string} iconName\n * @param {array} iconNode\n * @returns {ForwardRefExoticComponent} LucideIcon\n */\nconst createLucideIcon = (iconName: string, iconNode: IconNode) => {\n  const Component = forwardRef<SVGSVGElement, LucideProps>(({ className, ...props }, ref) =>\n    createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className,\n      ),\n      ...props,\n    }),\n  );\n\n  Component.displayName = toPascalCase(iconName);\n\n  return Component;\n};\n\nexport default createLucideIcon;\n"]},"metadata":{},"sourceType":"module"}