{"ast":null,"code":"import React from'react';import{Doughnut}from'react-chartjs-2';import{Chart as ChartJS,ArcElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend,Title);var UptimeGraph=function UptimeGraph(_ref){var serviceData=_ref.serviceData;var totalServices=serviceData?serviceData.length:0;var operationalServices=serviceData?serviceData.filter(function(s){return s.status==='Operational';}).length:0;var currentUptimePercentage=totalServices>0?operationalServices/totalServices*100:0;var downtimePercentage=100-currentUptimePercentage;var data={labels:['Operational','Non-Operational'],datasets:[{data:[currentUptimePercentage,downtimePercentage],backgroundColor:['rgba(75, 192, 192, 0.8)','rgba(255, 99, 132, 0.8)'],borderColor:['rgba(75, 192, 192, 1)','rgba(255, 99, 132, 1)'],borderWidth:1}]};var options={responsive:true,maintainAspectRatio:false,cutout:'70%',plugins:{legend:{position:'bottom',labels:{font:{size:14}}},title:{display:true,text:'Overall System Status',font:{size:22,weight:'900'},color:'#3B82F6',padding:{top:10,bottom:20}},tooltip:{callbacks:{label:function label(context){var label=context.label||'';if(label){label+=': ';}if(context.parsed!==null){label+=context.parsed.toFixed(2)+'%';}return label;}}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md mb-8 flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4 text-gray-800\"}),serviceData&&serviceData.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"relative h-64 w-64 md:h-80 md:w-80 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(Doughnut,{data:data,options:options}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute text-3xl font-bold text-gray-800\",children:[currentUptimePercentage.toFixed(1),\"%\"]})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-gray-500 py-10\",children:\"No service data available to display uptime graph. Ensure services are created. For historical uptime trends, backend changes to store timestamps are needed.\"})]});};export default UptimeGraph;","map":{"version":3,"names":["React","Doughnut","Chart","ChartJS","ArcElement","Title","Tooltip","Legend","register","UptimeGraph","serviceData","totalServices","length","operationalServices","filter","s","status","currentUptimePercentage","downtimePercentage","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","cutout","plugins","legend","position","font","size","title","display","text","weight","color","padding","top","bottom","tooltip","callbacks","label","context","parsed","toFixed"],"sources":["C:/Users/Samri/creator/creator/client/src/components/UptimeGraph.js"],"sourcesContent":["import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2'; \r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement, \r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n\r\nChartJS.register(\r\n  ArcElement, \r\n  Tooltip,\r\n  Legend,\r\n  Title\r\n);\r\n\r\nconst UptimeGraph = ({ serviceData }) => {\r\n  \r\n  const totalServices = serviceData ? serviceData.length : 0;\r\n  \r\n  const operationalServices = serviceData ? serviceData.filter(s => s.status === 'Operational').length : 0;\r\n  \r\n  const currentUptimePercentage = totalServices > 0 ? (operationalServices / totalServices) * 100 : 0;\r\n  const downtimePercentage = 100 - currentUptimePercentage;\r\n\r\n  \r\n  const data = {\r\n    labels: ['Operational', 'Non-Operational'], \r\n    datasets: [\r\n      {\r\n        data: [currentUptimePercentage, downtimePercentage], \r\n        backgroundColor: [\r\n          'rgba(75, 192, 192, 0.8)', \r\n          'rgba(255, 99, 132, 0.8)',  \r\n        ],\r\n        borderColor: [\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(255, 99, 132, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false, \r\n    cutout: '70%', \r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom', \r\n        labels: {\r\n          font: {\r\n            size: 14\r\n          }\r\n        }\r\n      },\r\n  title: {\r\n  display: true,\r\n  text: 'Overall System Status',\r\n  font: {\r\n    size: 22,\r\n    weight: '900' \r\n  },\r\n  color: '#3B82F6', \r\n  padding: {\r\n    top: 10,\r\n    bottom: 20\r\n  }\r\n}\r\n\r\n,\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(context) {\r\n            let label = context.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed !== null) {\r\n              label += context.parsed.toFixed(2) + '%'; \r\n            }\r\n            return label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md mb-8 flex flex-col items-center\"> \r\n      <h3 className=\"text-xl font-semibold mb-4 text-gray-800\"></h3>\r\n      {serviceData && serviceData.length > 0 ? (\r\n          <div className=\"relative h-64 w-64 md:h-80 md:w-80 flex items-center justify-center\"> \r\n              <Doughnut data={data} options={options} />\r\n           \r\n              <div className=\"absolute text-3xl font-bold text-gray-800\">\r\n                {currentUptimePercentage.toFixed(1)}%\r\n              </div>\r\n          </div>\r\n      ) : (\r\n          <p className=\"text-center text-gray-500 py-10\">\r\n            No service data available to display uptime graph. Ensure services are created.\r\n            For historical uptime trends, backend changes to store timestamps are needed.\r\n          </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UptimeGraph;\r\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,OACEC,KAAK,GAAIC,QAAO,CAChBC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CAAC,wFAGlBJ,OAAO,CAACK,QAAQ,CACdJ,UAAU,CACVE,OAAO,CACPC,MAAM,CACNF,KAAK,CACN,CAED,GAAMI,YAAW,CAAG,QAAdA,YAAW,MAAwB,IAAlBC,YAAW,MAAXA,WAAW,CAEhC,GAAMC,cAAa,CAAGD,WAAW,CAAGA,WAAW,CAACE,MAAM,CAAG,CAAC,CAE1D,GAAMC,oBAAmB,CAAGH,WAAW,CAAGA,WAAW,CAACI,MAAM,CAAC,SAAAC,CAAC,QAAIA,EAAC,CAACC,MAAM,GAAK,aAAa,GAAC,CAACJ,MAAM,CAAG,CAAC,CAExG,GAAMK,wBAAuB,CAAGN,aAAa,CAAG,CAAC,CAAIE,mBAAmB,CAAGF,aAAa,CAAI,GAAG,CAAG,CAAC,CACnG,GAAMO,mBAAkB,CAAG,GAAG,CAAGD,uBAAuB,CAGxD,GAAME,KAAI,CAAG,CACXC,MAAM,CAAE,CAAC,aAAa,CAAE,iBAAiB,CAAC,CAC1CC,QAAQ,CAAE,CACR,CACEF,IAAI,CAAE,CAACF,uBAAuB,CAAEC,kBAAkB,CAAC,CACnDI,eAAe,CAAE,CACf,yBAAyB,CACzB,yBAAyB,CAC1B,CACDC,WAAW,CAAE,CACX,uBAAuB,CACvB,uBAAuB,CACxB,CACDC,WAAW,CAAE,CACf,CAAC,CAEL,CAAC,CAGD,GAAMC,QAAO,CAAG,CACdC,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,KAAK,CAC1BC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,QAAQ,CAAE,QAAQ,CAClBX,MAAM,CAAE,CACNY,IAAI,CAAE,CACJC,IAAI,CAAE,EACR,CACF,CACF,CAAC,CACLC,KAAK,CAAE,CACPC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,uBAAuB,CAC7BJ,IAAI,CAAE,CACJC,IAAI,CAAE,EAAE,CACRI,MAAM,CAAE,KACV,CAAC,CACDC,KAAK,CAAE,SAAS,CAChBC,OAAO,CAAE,CACPC,GAAG,CAAE,EAAE,CACPC,MAAM,CAAE,EACV,CACF,CAAC,CAGKC,OAAO,CAAE,CACPC,SAAS,CAAE,CACTC,KAAK,CAAE,eAASC,OAAO,CAAE,CACvB,GAAID,MAAK,CAAGC,OAAO,CAACD,KAAK,EAAI,EAAE,CAC/B,GAAIA,KAAK,CAAE,CACTA,KAAK,EAAI,IAAI,CACf,CACA,GAAIC,OAAO,CAACC,MAAM,GAAK,IAAI,CAAE,CAC3BF,KAAK,EAAIC,OAAO,CAACC,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAAG,GAAG,CAC1C,CACA,MAAOH,MAAK,CACd,CACF,CACF,CACF,CACF,CAAC,CAED,mBACE,aAAK,SAAS,CAAC,mEAAmE,wBAChF,WAAI,SAAS,CAAC,0CAA0C,EAAM,CAC7DlC,WAAW,EAAIA,WAAW,CAACE,MAAM,CAAG,CAAC,cAClC,aAAK,SAAS,CAAC,qEAAqE,wBAChF,KAAC,QAAQ,EAAC,IAAI,CAAEO,IAAK,CAAC,OAAO,CAAEM,OAAQ,EAAG,cAE1C,aAAK,SAAS,CAAC,2CAA2C,WACvDR,uBAAuB,CAAC8B,OAAO,CAAC,CAAC,CAAC,OAC/B,GACJ,cAEN,UAAG,SAAS,CAAC,iCAAiC,2KAIjD,GACG,CAEV,CAAC,CAED,cAAetC,YAAW"},"metadata":{},"sourceType":"module"}