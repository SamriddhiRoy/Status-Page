{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async (userData, thunkAPI) => {\n  try {\n    return await authService.register(userData);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Login user\nexport const login = createAsyncThunk('auth/login', async (userData, thunkAPI) => {\n  try {\n    return await authService.login(userData);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Logout user\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","userData","thunkAPI","error","response","data","toString","rejectWithValue","login","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/Samri/creator/creator/client/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authService from './authService';\r\n\r\n// Get user from localStorage\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\n// Register user\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (userData, thunkAPI) => {\r\n    try {\r\n      return await authService.register(userData);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Login user\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (userData, thunkAPI) => {\r\n    try {\r\n      return await authService.login(userData);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Logout user\r\nexport const logout = createAsyncThunk('auth/logout', async () => {\r\n  await authService.logout();\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}