{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samri\\\\creator\\\\creator\\\\client\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"../components/ui/Button\";\nimport { Input } from \"../components/ui/Input\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"admin@example.com\");\n  const [password, setPassword] = useState(\"admin123\");\n  const [error, setError] = useState(\"\");\n  const handleLogin = async () => {\n    setError(\"\");\n    try {\n      const res = await fetch(\"http://localhost:8000/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!res.ok) {\n        throw new Error(\"Invalid credentials\");\n      }\n      const data = await res.json();\n      localStorage.setItem(\"token\", data.token);\n      console.log(\"Login successful, navigating to /dashboard\");\n\n      // Ensure navigation happens after state updates\n      setTimeout(() => {\n        navigate(\"/dashboard\");\n      }, 0);\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-sm p-6 bg-white rounded-xl shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogin,\n        className: \"w-full\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"c8YvZrN/mstlyHET5XiHrKMFQpw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Button","Input","useNavigate","Login","navigate","email","setEmail","password","setPassword","error","setError","handleLogin","res","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","localStorage","setItem","token","console","log","setTimeout","err","message","e","target","value"],"sources":["C:/Users/Samri/creator/creator/client/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"../components/ui/Button\";\r\nimport { Input } from \"../components/ui/Input\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"admin@example.com\");\r\n  const [password, setPassword] = useState(\"admin123\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleLogin = async () => {\r\n    setError(\"\");\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:8000/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"Invalid credentials\");\r\n      }\r\n\r\n      const data = await res.json();\r\n      localStorage.setItem(\"token\", data.token);\r\n\r\n      console.log(\"Login successful, navigating to /dashboard\");\r\n\r\n      // Ensure navigation happens after state updates\r\n      setTimeout(() => {\r\n        navigate(\"/dashboard\");\r\n      }, 0);\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen items-center justify-center\">\r\n      <div className=\"w-full max-w-sm p-6 bg-white rounded-xl shadow\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Login</h2>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"mb-3\"\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"mb-3\"\r\n        />\r\n        {error && <p className=\"text-red-500 mb-2\">{error}</p>}\r\n        <Button onClick={handleLogin} className=\"w-full\">\r\n          Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,mBAAmB,CAAC;EACvD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,UAAU,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,WAAW,GAAG,YAAY;IAC9BD,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb,KAAK;UAAEE;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,IAAI,CAACK,GAAG,CAACO,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MACxC;MAEA,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,EAAE;MAC7BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;MAEzCC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;;MAEzD;MACAC,UAAU,CAAC,MAAM;QACfxB,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,EAAE,CAAC,CAAC;IACP,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZH,OAAO,CAACjB,KAAK,CAAC,cAAc,EAAEoB,GAAG,CAAC;MAClCnB,QAAQ,CAACmB,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,2CAA2C;IAAA,uBACxD;MAAK,SAAS,EAAC,gDAAgD;MAAA,wBAC7D;QAAI,SAAS,EAAC,yBAAyB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW,eAClD,QAAC,KAAK;QACJ,IAAI,EAAC,OAAO;QACZ,WAAW,EAAC,OAAO;QACnB,KAAK,EAAEzB,KAAM;QACb,QAAQ,EAAG0B,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC1C,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAChB,eACF,QAAC,KAAK;QACJ,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,UAAU;QACtB,KAAK,EAAE1B,QAAS;QAChB,QAAQ,EAAGwB,CAAC,IAAKvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC7C,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAChB,EACDxB,KAAK,iBAAI;QAAG,SAAS,EAAC,mBAAmB;QAAA,UAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACtD,QAAC,MAAM;QAAC,OAAO,EAAEE,WAAY;QAAC,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvC;IAAA;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA5DIR,KAAK;EAAA,QACQD,WAAW;AAAA;AAAA,KADxBC,KAAK;AA8DX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}