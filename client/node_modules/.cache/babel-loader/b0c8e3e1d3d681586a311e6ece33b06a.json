{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samri\\\\creator\\\\creator\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Load user when token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('http://localhost:5000/api/auth/me', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUser(response.data);\n        } catch (error) {\n          console.error(\"Error loading user:\", error);\n          localStorage.removeItem('token'); // Clear invalid token\n        }\n      }\n\n      setLoading(false);\n    };\n    loadUser();\n  }, []);\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  // New function to update user data\n  const updateUser = updatedData => {\n    setUser(prevUser => ({\n      ...prevUser,\n      ...updatedData\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      setUser,\n      // Direct setter\n      updateUser // Partial updater\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","loadUser","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","removeItem","login","userData","setItem","logout","updateUser","updatedData","prevUser"],"sources":["C:/Users/Samri/creator/creator/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Load user when token exists\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/api/auth/me', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          setUser(response.data);\r\n        } catch (error) {\r\n          console.error(\"Error loading user:\", error);\r\n          localStorage.removeItem('token'); // Clear invalid token\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  const login = (token, userData) => {\r\n    localStorage.setItem('token', token);\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  // New function to update user data\r\n  const updateUser = (updatedData) => {\r\n    setUser(prevUser => ({\r\n      ...prevUser,\r\n      ...updatedData\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider \r\n      value={{ \r\n        user, \r\n        loading, \r\n        login, \r\n        logout,\r\n        setUser, // Direct setter\r\n        updateUser // Partial updater\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,WAAW,gBAAGJ,aAAa,EAAE;AAEnC,OAAO,MAAMK,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,YAAY;MAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,mCAAmC,EAAE;YACpEC,OAAO,EAAE;cAAEC,aAAa,EAAG,UAASN,KAAM;YAAE;UAC9C,CAAC,CAAC;UACFJ,OAAO,CAACO,QAAQ,CAACI,IAAI,CAAC;QACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;UAC3CP,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC;MACF;;MACAZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,KAAK,GAAG,CAACX,KAAK,EAAEY,QAAQ,KAAK;IACjCX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;IACpCJ,OAAO,CAACgB,QAAQ,CAAC;EACnB,CAAC;EAED,MAAME,MAAM,GAAG,MAAM;IACnBb,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCd,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,MAAMmB,UAAU,GAAIC,WAAW,IAAK;IAClCpB,OAAO,CAACqB,QAAQ,KAAK;MACnB,GAAGA,QAAQ;MACX,GAAGD;IACL,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLrB,IAAI;MACJE,OAAO;MACPc,KAAK;MACLG,MAAM;MACNlB,OAAO;MAAE;MACTmB,UAAU,CAAC;IACb,CAAE;IAAA,UAEDrB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B,CAAC;AAAC,GAzDWD,YAAY;AAAA,KAAZA,YAAY;AA2DzB,eAAeD,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}