{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samri\\\\creator\\\\creator\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport UptimeGraph from '../components/UptimeGraph';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8001/services/').then(res => setServices(res.data));\n  }, []);\n\n  // Prepare data for the uptime graph\n  const prepareUptimeData = serviceData => {\n    // Format the data to match what the graph component expects\n    return serviceData.map(service => ({\n      status: service.status,\n      timestamp: service.timestamp\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), services.length > 0 && /*#__PURE__*/_jsxDEV(UptimeGraph, {\n      serviceData: prepareUptimeData(services)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-2\",\n      children: \"Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2\",\n      children: services.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center justify-between border p-2 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: service.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-${statusColor[service.status]}-600 font-bold capitalize`,\n          children: service.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, service.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6zIv7VYIWrxuvR7GDZce08FfVgw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","UptimeGraph","axios","Dashboard","services","setServices","get","then","res","data","prepareUptimeData","serviceData","map","service","status","timestamp","length","name","statusColor","id"],"sources":["C:/Users/Samri/creator/creator/client/src/pages/Dashboard.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport UptimeGraph from '../components/UptimeGraph';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const [services, setServices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8001/services/')\r\n      .then((res) => setServices(res.data));\r\n  }, []);\r\n\r\n  // Prepare data for the uptime graph\r\n  const prepareUptimeData = (serviceData) => {\r\n    // Format the data to match what the graph component expects\r\n    return serviceData.map(service => ({\r\n      status: service.status,\r\n      timestamp: service.timestamp,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-xl font-bold\">Dashboard</h1>\r\n      {/* Render the graph with the prepared uptime data */}\r\n      {services.length > 0 && <UptimeGraph serviceData={prepareUptimeData(services)} />}\r\n      <h2 className=\"text-lg font-semibold mb-2\">Services</h2>\r\n      <ul className=\"space-y-2\">\r\n        {services.map((service) => (\r\n          <li key={service.id} className=\"flex items-center justify-between border p-2 rounded\">\r\n            <span>{service.name}</span>\r\n            <span className={`text-${statusColor[service.status]}-600 font-bold capitalize`}>\r\n              {service.status}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACI,GAAG,CAAC,iCAAiC,CAAC,CACzCC,IAAI,CAAEC,GAAG,IAAKH,WAAW,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,iBAAiB,GAAIC,WAAW,IAAK;IACzC;IACA,OAAOA,WAAW,CAACC,GAAG,CAACC,OAAO,KAAK;MACjCC,MAAM,EAAED,OAAO,CAACC,MAAM;MACtBC,SAAS,EAAEF,OAAO,CAACE;IACrB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,mBAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,EAE/CX,QAAQ,CAACY,MAAM,GAAG,CAAC,iBAAI,QAAC,WAAW;MAAC,WAAW,EAAEN,iBAAiB,CAACN,QAAQ;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACjF;MAAI,SAAS,EAAC,4BAA4B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACxD;MAAI,SAAS,EAAC,WAAW;MAAA,UACtBA,QAAQ,CAACQ,GAAG,CAAEC,OAAO,iBACpB;QAAqB,SAAS,EAAC,sDAAsD;QAAA,wBACnF;UAAA,UAAOA,OAAO,CAACI;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC3B;UAAM,SAAS,EAAG,QAAOC,WAAW,CAACL,OAAO,CAACC,MAAM,CAAE,2BAA2B;UAAA,UAC7ED,OAAO,CAACC;QAAM;UAAA;UAAA;UAAA;QAAA,QACV;MAAA,GAJAD,OAAO,CAACM,EAAE;QAAA;QAAA;QAAA;MAAA,QAMpB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GAnCIhB,SAAS;AAAA,KAATA,SAAS;AAqCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}